01001001 #need to make the number 100 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001001 #need to make the number 100 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001001 #need to make the number 100 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001001 #need to make the number 100 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001001 #need to make the number 100 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001101
01001101
01001101
01001101 #create memory location 4
00011011 #put the number 100 in memory location 23
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101101
00101101
00101101
00101101 #reset register 3
01010000 #reset register 0
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #create number 8
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #create memory location 7
00011011 #store the number 8 into memory location 7
00000011 #load memory location 7 in r0
01010100 #init register 1 to 0
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































loop2
01001001 #create number 1
01001101
01001101
01001101
01001101
01001101 #create memory location 5
00011011 #put the number 1 in memory location 5
00101101
00101101
00101101
00101101
00101101 #reset register 3
00101001 #reset register 2
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #create number 16
01001101
01001101
01001101
01001101
01001101
01001101 #create memory location 6
00011011 #put the number 16 in memory location 6
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101 #set register 3 to 1
01001001 #set register 2 to 1




















































































































































































































































































































































































































































loop:
00000000 #load in current memory location value
01101100 #register 3 and register 0 which is memory location current
01010011 #set register 0 back to 3 which is where T is located
00000000 #load in current memory location 3
01101000 #register 2 and register 0 which is in memory location 3
00111110 #if both numbers are equal set register 0 to 0
01010100 #set register 1 to 0
01101101 #reset r3
01101001 #reset r2
01010100 #reset register 1
01111011 #jump forward 5**3 spaces if branch says they are equal which is good
01010000 #reset register 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 14
01011111 #go to memory location 14 * 8 = 112
00001011 #load in memory 112 number
00101001 #sub 1
00011011 #store it back
01000011 #make r0 equal to register 3
01000011 #make r0 equal to twice register 3
00001100 #will pull from 0s big number memory location and overwrite register 3
01010000 #reset 0 back to 0












































































































else
01010000 #reset register 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 14
01011111 #go to memory location 14 * 8 = 112
00001011 #load in memory 116 number
01001001 #add 1
00011011 #store it back
01000011 #make r0 equal to register 3
01000011 #make r0 equal to twice register 3
00001100 #will pull from 0s big number memory location and overwrite register 3
01010000 #reset 0 back to 0
01001101
01001101
01001101
01001101
01001101 #go to memory location 5
00000011 #set register 3 to register 0 in mem5
01000000 #double it
00010011 #store it back
00101101
00101101
00101101
00101101
00101101 #reset r3 back to 0
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 6
00001011 #load the number 32 in memory location 6
00101001 #subtract 1 from it
01010000 #reset register 0
01000010 #put register 2 into register 0
00011011 #store register 2 inside of memory location 6 after decrement
01111011 #jump 125 spaces
01010000 #reset register 0
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #add to register 3
00000011 #add register 3 location 7 in r0
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101 #set to memory location 5
00001011 #load in memory location 5
00001111 #load in memory location 5
01110100 #jump back to beginning of loop









































































































01010000 #reset register 0
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 14
01011111 #go to memory location 14 * 8 = 112
00000111 #store memory 112 number into register 1
01001101 #go to memory location 113
00001011 #store memory 113 into register 2
00111001 #check if register 2 and 1 are equal
01111010 #jump to else2
00110110 #check if register 1 is less than  register 2
01111011 #jump to else3
00010111 #store number back to memory 113
01001101 #go to memory location 114
01010001 #set r0 to 1
00010011 #store register 0 back into memory 118
01010000 #reset r0 to 0
01111011 #branch forward automatically to else 3





















else2
01001101 #go to memory location 114
00001011 #load memory 114 into register 2
01001001 #add 1 to register 2
00011011 #store register 2 into memory location 114
01010000 #reset r0 to 0
01111011 #jump 125 spaces




























































































01001101 #make it 114 safety line

































else3
00101101
00101101 #go to memory location 112
01010000 #reset 0 to 0
00010011 #hard reset memory location 112 to 0
01000011 #make r0 equal to register 3
01000011 #make r0 equal to twice register 3
00001100 #will pull from 0s big number memory location and overwrite register 3
01010000 #reset 0 back to 0
01001101
01001101
01001101
01001101 #go to memory location 4
00001011 #load in array decrementer
00101001 #subtract 1 from it
00011011 #put it back into memory location 4
01000010 #set register 0 to register 2
01111011 #branch to done2 if its equal to 0
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
00000011 #load memory location 7 in r0
01010101 #init register 1 to 1
01000001 #add contents of r0 and r1 increment by 1
00010011 #store r0 back into memory location 7
01010100 #init register 1 to 0
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 12
01011111 #go to memory location 12 * 8 = 96
01000111 #make r1 equal to register 3
01000111 #make r1 equal to twice register 3
00001101 #will pull from 1s big number memory location and overwrite register 3
00001001 #will pull from 1s big number memory location and overwrite register 2
01010100 #reset register 1
01110101 #jump back to loop 2





















































































































































01010000 #reset register 0 to 0
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 12
01011111 #go to memory location 12 * 8 = 116
01000011 #make r0 equal to register 3
01000011 #make r0 equal to twice register 3
00001100 #will pull from 0s big number memory location and overwrite register 3
00001000 #will pull from 0s big number memory location and overwrite register 2
01010000 #reset 0 back to 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 14
01011111 #go to memory location 14 * 8 = 116
01001101 #go to memory location 117
00001011 #load in memory 117 data
01010011 #set register 0 to 3
00011000 #store into memory location 3
01001101 #go to memory location 118
00001011 #load in memory 118 data
01010000 #set register 0 to 0
00011000 #store into memory location 0
01000011 #make r0 equal to register 3
01000011 #make r0 equal to twice register 3
00001100 #will pull from 0s big number memory location and overwrite register 3
00001000 #will pull from 0s big number memory location and overwrite register 2
01010000 #reset 0 back to 0
01001101
01001101
01001101 #go to memory location 3
00001011 #load into register 2
01001101 #go to memory location 4
00011011 #store register 2 into memory location 4
00101101
00101101
00101101
00101101 #go to memory location 0
00001011 #load into register 2
01001101
01001101
01001101
01001101
01001101 #go to memory location 5
00011011 #store register 2 into memmory location 5