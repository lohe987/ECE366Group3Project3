01001001 #need to make the number 20 God help me
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #created number 20
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #create memory location 23
00011011 #put the number 20 in memory location 23
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01010000 #reset register 0












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































loop2
01001001 #create number 1
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #create memory location 25
00011011 #put the number 1 in memory location 25
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
00101001 #reset register 2
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001
01001001 #create number 32
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #create memory location 24
00011011 #put the number 32 in memory location 24
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001
00101001 #reset register 2
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101 #add to register 3
00000011 #load memory location 1 in r0
01000011 #add contents of r0 and r3 increment by 1
00010011 #store r0 back into memory location 1
00100010 #put r0 back minus 1 to stay with current iteration
00101101 #reset register 3
01001101 #set register 3 to 1 could also load in memory location 25
01001001 #set register 2 to 1




















































































































































































































































































































































































































































loop:
00000000 #load in current memory location value
01101100 #register 3 and register 0 which is memory location current
01010000 #set register 0 back to 0
00000000 #load in current memory location 0
01101000 #register 2 and register 0 which is in memory location 0
00111110 #if both numbers are equal set register 0 to 0
01010110 #set register 1 to 2
00001101 #reset r3
00001001 #reset r2
01010100 #reset register 1
01111011 #jump forward 5**3 spaces if branch says they are equal which is good
01010000 #reset register 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 26
00001011 #load in memory 26 number
00101001 #sub 1
00011011 #store it back
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset r3 back to 0




































































else
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 26
00001011 #load in memory 26 number
01001001 #add 1
00011011 #store it back
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset r3 back to 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 25
00000011 #set register 3 to register 0 in mem25
01000000 #double it
00010011 #store it back
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset r3 back to 0
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 24
00001011 #load the number 32 in memory location 24
00101001 #subtract 1 from it
01010000 #reset register 0
01000010 #put register 2 into register 0
00011011 #store register 2 inside of memory location 24 after decrement
01111011 #jump 125 spaces
01010000 #reset register 0
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101 #add to register 3
00000011 #load memory location 1 in r0
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #set to memory location 25
00001011 #load in memory location 25
00001111 #load in memory location 25
01110100 #jump back to beginning of loop









































































































00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 26
00000111 #store memory 26 number into register 1
01001101 #go to memory location 27
00001011 #store memory 27 into register 2
00111001 #check if register 2 and 1 are equal
01111010 #jump to else2
00110110 #check if register 1 is less than  register 2
01111011 #jump to else3
00010111 #store number back to memory 27
01001101 #go to memory location 28
01010001 #set r0 to 1
00010011 #store register 0 back into memory 28
01010000 #reset r0 to 0
01111011 #branch forward automatically to else 3





















else2
01001101 #go to memory location 28
00001011 #load memory 28 into register 2
01001001 #add 1 to register 2
00011011 #store register 2 into 28
01010000 #reset r0 to 0
01111011 #jump 125 spaces




























































































01001101 #make it 28 safety line

































else3
00101101
00101101 #go to memory location 26
01010000 #reset 0 to 0
00010011 #hard reset memory location 26 to 0
00101101
00101101
00101101 #go to memory location 23
00001011 #load in array decrementer
00101001 #subtract 1 from it
00011011 #put it back into memory location 23
01000010 #set register 0 to register 2
01111011 #branch to done2 if its equal to 0
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101 #memory location 2
00001011 #load in 0 to register 2 to reset
00101101
00101101 #reset register 3
01110101 #jump back to loop 2





















































































































































01010000 #reset register 0 to 0
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101
00101101 #reset register 3
01001101
01001101 #memory location 2
00001011 #load in 0 to register 2 to reset
00101101
00101101 #reset register 3
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101
01001101 #go to memory location 27
00001011 #load in memory 27 data
01010001 #set register 0 to 1
00011000 #store into memory location 1
01001101 #go to memory location 28
00001011 #load in memory 28 data
01010010 #set register 0 to 2
00011000 #store into memory location 2
